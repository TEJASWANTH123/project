{
    "openapi": "3.0.0",
    "info": {
      "title": "Todo and Auth API",
      "description": "APIs for managing a todo list and user authentication",
      "version": "1.0.0"
    },
    "paths": {
      "/tasks": {
        "get": {
          "summary": "Get all tasks",
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {
                  "example": []
                }
              }
            }
          }
        },
        "post": {
          "summary": "Create a new task",
          "requestBody": {
            "description": "Task details",
            "content": {
              "application/json": {
                "example": {
                  "title": "Task 1"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "Task created successfully",
              "content": {
                "application/json": {
                  "example": {
                    "message": "Task created successfully",
                    "task": {
                      "id": 1,
                      "title": "Task 1"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/tasks/{id}": {
        "get": {
          "summary": "Get a task by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Task ID",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {
                  "example": {
                    "id": 1,
                    "title": "Task 1"
                  }
                }
              }
            }
          }
        },
        "put": {
          "summary": "Update a task by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Task ID",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "description": "Task details",
            "content": {
              "application/json": {
                "example": {
                  "title": "Updated Task 1"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Task updated successfully",
              "content": {
                "application/json": {
                  "example": {
                    "message": "Task updated successfully"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "summary": "Delete a task by ID",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "Task ID",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Task deleted successfully",
              "content": {
                "application/json": {
                  "example": {
                    "message": "Task deleted successfully"
                  }
                }
              }
            }
          }
        }
      },
      "/auth/register": {
        "post": {
          "summary": "Register a new user",
          "description": "Create a new user account",
          "requestBody": {
            "description": "User registration details",
            "content": {
              "application/json": {
                "example": {
                  "username": "User1",
                  "email": "user1@example.com",
                  "password": "password123"
                }
              }
            },
            "required": true
          },
          "responses": {
            "201": {
              "description": "User registered successfully",
              "content": {
                "application/json": {
                  "example": {
                    "message": "User registered successfully",
                    "user": {
                      "username": "User1",
                      "email": "user1@example.com"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "User already exists"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "summary": "Login a user",
          "description": "Authenticate and log in a user",
          "requestBody": {
            "description": "User login details",
            "content": {
              "application/json": {
                "example": {
                  "email": "user1@example.com",
                  "password": "password123"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Login successful",
              "content": {
                "application/json": {
                  "example": {
                    "message": "Login successful",
                    "user": {
                      "username": "User1",
                      "email": "user1@example.com"
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Invalid email or password"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/auth/logout": {
        "post": {
          "summary": "Logout a user",
          "description": "Log out a user (if using session-based authentication)",
          "responses": {
            "200": {
              "description": "Logged out successfully"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      }
    }
  }
  